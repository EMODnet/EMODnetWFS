[{"path":"https://emodnet.github.io/EMODnetWFS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 European Marine Observation Data Network (EMODnet) Biology project Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/articles/emodnetwfs.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"EMODnetWFS Case Study: Accessing and mapping EMODnet data","text":"package designed make EMODnet vector data layers easily accessible R. package allows users query information download data available EMODnet Web Feature Service (WFS) endpoints directly R working environment. Data managed sf objects currently state---art handling vector spatial data R. package also allows user specify coordinate reference system imported data.","code":""},{"path":[]},{"path":"https://emodnet.github.io/EMODnetWFS/articles/emodnetwfs.html","id":"installation","dir":"Articles","previous_headings":"Data Product","what":"Installation","title":"EMODnetWFS Case Study: Accessing and mapping EMODnet data","text":"can install development version EMODnetWFS GitHub :","code":"remotes::install_github(\"EMODnet/EMODnetWFS\")"},{"path":"https://emodnet.github.io/EMODnetWFS/articles/emodnetwfs.html","id":"explore-the-emodnet-wfs-services-with-r","dir":"Articles","previous_headings":"Data Product","what":"Explore the EMODnet WFS services with R","title":"EMODnetWFS Case Study: Accessing and mapping EMODnet data","text":"tutorial make use sf, dplyr mapview packages. simple features sf package well known standard dealing geospatial vector data. package dplyr strong library data manipulation. package also loads magickr’s pipe operator %>%, allows write pipelines R. visualize geometries, mapview create quick interactive maps. Run line install packages: EMODnetWFS package, can explore combine data served EMODnet lots OGC Web Feature Services WFS. Imagine interested seabed substrates. first stop choose EMODnet lot can provide data. , can check services available emodnet_wfs() function. column service_name shows services available, service_url corresponding base url perform WFS request. Seabed portal data looking . WFS client can created passing corresponding service_name function emodnet_init_wfs_client(). layers available WFS client consulted emodnet_get_wfs_info(). layer explained abstract column. can see several layers information provided EU member states Habitats Directive 92/43/EEC reporting. select layers coastal lagoons, mudflats sandbanks respective layer_name. now ready read layers R emodnet_get_layers(). EMODnetWFS reads geometries simple features (See sf package) transformed 4326 default. Specifying another map projection possible passing EPGS code projection string emodnet_get_layers(crs = \"projection\"). argument reduce_layers = TRUE stack layers one single tibble. Default FALSE returns list sf objects, one per layer. Run following code quick look layers geometries Furthermore, can get data EMODnet lots combine . Human Activities portal provides maritime boundaries European Union state members. time initiate WFS client, call service directly. WFS client generated fly. , look layers available first. layer_name maritime boundaries seems maritimebnds. dataset developed based official data provided European Environmental Agency Maritime Boundaries Database compiled MarineRegions.org (Flanders Marine Institute, 2019). sitename variable specifies type boundary feature represents. illustration purposes, filter request return Territorial Seas. Add maritime boundaries previous map line. , cats MULTILINESTRING geometry type, transform crs habitats directive sf (required next step), crop using bounding box habitats directive sf. now combined data Seabed Habitats Human Activities portals. However, ! EMODnet provides also physics, chemistry, biological bathymetry data. Explore layers available .","code":"install.packages(c(\"sf\", \"dplyr\", \"mapview\")) library(EMODnetWFS) library(mapview) library(dplyr) library(sf)  emodnet_wfs() #> # A tibble: 17 × 2 #>    service_name                                                    service_url   #>    <chr>                                                           <chr>         #>  1 bathymetry                                                      https://ows.… #>  2 biology                                                         https://geo.… #>  3 biology_occurrence_data                                         https://geo.… #>  4 chemistry_cdi_data_discovery_and_access_service                 https://geo-… #>  5 chemistry_cdi_distribution_observations_per_category_and_region https://geo-… #>  6 chemistry_contaminants                                          https://nodc… #>  7 chemistry_marine_litter                                         https://www.… #>  8 geology_coastal_behavior                                        https://driv… #>  9 geology_events_and_probabilities                                https://driv… #> 10 geology_marine_minerals                                         https://driv… #> 11 geology_sea_floor_bedrock                                       https://driv… #> 12 geology_seabed_substrate_maps                                   https://driv… #> 13 geology_submerged_landscapes                                    https://driv… #> 14 human_activities                                                https://ows.… #> 15 physics                                                         https://geos… #> 16 seabed_habitats_general_datasets_and_products                   https://ows.… #> 17 seabed_habitats_individual_habitat_map_and_model_datasets       https://ows.… seabed_wfs_client <- emodnet_init_wfs_client(service = \"seabed_habitats_general_datasets_and_products\") #> Loading ISO 19139 XML schemas... #> Loading ISO 19115 codelists... #> Loading IANA mime types... #> No encoding supplied: defaulting to UTF-8. #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-seabedhabitats.eu/geoserver/emodnet_open/wfs' #> ℹ Version: '2.0.0'  emodnet_get_wfs_info(wfs = seabed_wfs_client) #> # A tibble: 33 × 9 #>    data_source service_name         service_url layer_namespace layer_name title #>    <chr>       <chr>                <chr>       <chr>           <chr>      <chr> #>  1 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    art17_hab… 2013… #>  2 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    art17_hab… 2013… #>  3 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    art17_hab… 2013… #>  4 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    art17_hab… 2013… #>  5 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    art17_hab… 2013… #>  6 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    art17_hab… 2013… #>  7 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    art17_hab… 2013… #>  8 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    art17_hab… 2013… #>  9 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    biogenic_… Biog… #> 10 emodnet_wfs seabed_habitats_gen… https://ow… emodnet_open    habitat_p… Coll… #> # … with 23 more rows, and 3 more variables: abstract <chr>, class <chr>, #> #   format <chr> habitats_directive_layer_names <- c(\"art17_hab_1110\", \"art17_hab_1140\", \"art17_hab_1150\")  emodnet_get_layer_info(wfs = seabed_wfs_client, layers = habitats_directive_layer_names) #> # A tibble: 3 × 9 #>   data_source service_name service_url layer_namespace layer_name title abstract #>   <chr>       <chr>        <chr>       <chr>           <chr>      <chr> <chr>    #> 1 emodnet_wfs https://ows… seabed_hab… emodnet_open    art17_hab… 2013… \"Gridde… #> 2 emodnet_wfs https://ows… seabed_hab… emodnet_open    art17_hab… 2013… \"Gridde… #> 3 emodnet_wfs https://ows… seabed_hab… emodnet_open    art17_hab… 2013… \"Gridde… #> # … with 2 more variables: class <chr>, format <chr> habitats_directive_layers <- emodnet_get_layers(wfs = seabed_wfs_client,                                                  layers = habitats_directive_layer_names,                                                  reduce_layers = TRUE)    class(habitats_directive_layers) #> [1] \"sf\"         \"data.frame\"  glimpse(habitats_directive_layers) #> Rows: 221 #> Columns: 9 #> $ gml_id              <chr> \"art17_hab_1110.13\", \"art17_hab_1110.22\", \"art17_h… #> $ habitat_code        <chr> \"1110\", \"1110\", \"1110\", \"1110\", \"1110\", \"1110\", \"1… #> $ ms                  <chr> \"DK\", \"ES\", \"ES\", \"PT\", \"PT\", \"PL\", \"DK\", \"FR\", \"U… #> $ region              <chr> \"ATL\", \"MAC\", \"MMAC\", \"MMAC\", \"MATL\", \"MBAL\", \"MBA… #> $ cs_ms               <chr> \"U2+\", \"U1+\", \"U1+\", \"XX\", \"U1-\", \"U1-\", \"U1-\", \"U… #> $ country_code        <chr> \"Denmark\", \"Spain\", \"Spain\", \"Portugal\", \"Portugal… #> $ habitat_code_uri    <chr> \"http://dd.eionet.europa.eu/vocabulary/art17_2018/… #> $ habitat_description <chr> \"Sandbanks which are slightly covered by sea water… #> $ geom                <MULTISURFACE [m]> MULTISURFACE (POLYGON ((420..., MULTI… # Transform to Polygon geometry type from Multisurface if(unique(st_geometry_type(habitats_directive_layers)) == \"MULTISURFACE\"){   habitats_directive_layers <- habitats_directive_layers %>%      st_cast(to = \"GEOMETRYCOLLECTION\") %>%      st_collection_extract(type = \"POLYGON\") }  # Visualize map <- mapview(habitats_directive_layers, zcol = \"habitat_description\", burst = TRUE)  map emodnet_get_wfs_info(service = \"human_activities\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-humanactivities.eu/wfs' #> ℹ Version: '2.0.0' #> # A tibble: 95 × 9 #>    data_source service_name     service_url     layer_namespace layer_name title #>    <chr>       <chr>            <chr>           <chr>           <chr>      <chr> #>  1 emodnet_wfs human_activities https://ows.em… emodnet         activelic… Acti… #>  2 emodnet_wfs human_activities https://ows.em… emodnet         aquacultu… Advi… #>  3 emodnet_wfs human_activities https://ows.em… emodnet         baltic     Advi… #>  4 emodnet_wfs human_activities https://ows.em… emodnet         blacksea   Advi… #>  5 emodnet_wfs human_activities https://ows.em… emodnet         longdista… Advi… #>  6 emodnet_wfs human_activities https://ows.em… emodnet         market     Advi… #>  7 emodnet_wfs human_activities https://ows.em… emodnet         mediterra… Advi… #>  8 emodnet_wfs human_activities https://ows.em… emodnet         northsea   Advi… #>  9 emodnet_wfs human_activities https://ows.em… emodnet         northwest… Advi… #> 10 emodnet_wfs human_activities https://ows.em… emodnet         outermost… Advi… #> # … with 85 more rows, and 3 more variables: abstract <chr>, class <chr>, #> #   format <chr> maritime_boundaries <- emodnet_get_layers(service = \"human_activities\",                                            layers = \"maritimebnds\",                                            reduce_layers = TRUE,                                           cql_filter = \"sitename='Territory sea (12 nm)'\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-humanactivities.eu/wfs' #> ℹ Version: '2.0.0'  glimpse(maritime_boundaries) #> Rows: 64 #> Columns: 13 #> $ gml_id     <chr> \"maritimebnds.49\", \"maritimebnds.58\", \"maritimebnds.59\", \"m… #> $ objectid   <dbl> 49, 58, 59, 60, 61, 62, 54, 55, 56, 57, 39, 40, 41, 42, 44,… #> $ mblszotpid <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ localid    <dbl> 49024, 49064, 49065, 49066, 49087, 49099, 49034, 49036, 490… #> $ sitename   <chr> \"Territory sea (12 nm)\", \"Territory sea (12 nm)\", \"Territor… #> $ legalfound <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ legalfou_1 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ country    <chr> \"Latvia\", \"France\", \"France\", \"France\", \"Spain\", \"Cyprus\", … #> $ nationalle <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ nutscode   <chr> \"LV\", \"FR\", \"FR\", \"FR\", \"ES\", \"CY\", \"SE\", \"UK\", \"FR\", \"FR\",… #> $ mblsds_mbl <chr> \"In www.marineregions.org\", \"In www.marineregions.org\", \"In… #> $ shape_leng <dbl> 12.005746, 1.949563, 2.072975, 1.837879, 27.878496, 13.6428… #> $ the_geom   <MULTICURVE [°]> MULTICURVE (LINESTRING (23...., MULTICURVE (LINE… maritime_boundaries <- maritime_boundaries %>%    st_cast(to = \"MULTILINESTRING\") %>%   st_transform(st_crs(habitats_directive_layers)) %>%   st_crop(st_bbox(habitats_directive_layers))  map + mapview(maritime_boundaries ) emodnet_get_all_wfs_info()"},{"path":[]},{"path":"https://emodnet.github.io/EMODnetWFS/articles/emodnetwfs.html","id":"references","dir":"Articles","previous_headings":"More information","what":"References","title":"EMODnetWFS Case Study: Accessing and mapping EMODnet data","text":"Blondel, Emmanuel. (2020, May 27). ows4R: R Interface OGC Web-Services (Version 0.1-5). Zenodo. http://doi.org/10.5281/zenodo.3860330 Flanders Marine Institute (2019). Maritime Boundaries Geodatabase, version 11. Available online https://www.marineregions.org/. https://doi.org/10.14284/382. Hadley Wickham, Romain François, Lionel Henry Kirill Müller (2020). dplyr: Grammar Data Manipulation. R package version 1.0.2.https://CRAN.R-project.org/package=dplyr Pebesma E (2018). “Simple Features R: Standardized Support Spatial Vector Data.” R Journal, 10(1), 439–446. doi: 10.32614/RJ-2018-009, https://doi.org/10.32614/RJ-2018-009. R Core Team (2020). R: language environment statistical computing. R Foundation Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. Tim Appelhans, Florian Detsch, Christoph Reudenbach Stefan Woellauer (2020). mapview: Interactive Viewing Spatial Data R. R package version 2.9.0. https://CRAN.R-project.org/package=mapview","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/articles/emodnetwfs.html","id":"code","dir":"Articles","previous_headings":"More information","what":"Code","title":"EMODnetWFS Case Study: Accessing and mapping EMODnet data","text":"Please cite package : Anna Krystalli (2020). EMODnetWFS: Access EMODnet Web Feature Service data R. R package version 0.0.2. https://github.com/EMODnet/EMODnetWFS. Integrated data products created European Marine Observation Data Network (EMODnet) Biology project (EASME/EMFF/2017/1.3.1.2/02/SI2.789013), funded European Union Regulation (EU) 508/2014 European Parliament Council 15 May 2014 European Maritime Fisheries Fund.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"cql-ecql-query-languages-","dir":"Articles","previous_headings":"","what":"CQL & ECQL Query languages.","title":"EQCL feature filtering","text":"CQL (Common Query Language) plain-text language created OGC Catalog specification. GeoServer adapted easy--use filtering mechanism. GeoServer actually implements powerful extension called ECQL (Extended CQL), allows expressing full range filters OGC Filter 1.1 can encode. ECQL accepted many places GeoServer. GeoServer supports use CQL ECQL WFS requests whenever documentation refers CQL, ECQL syntax can used well. examples provided small subset filtering functionality available Geoserver. Full references examples can found following documentation: ECQL Reference: reference syntax ECQL language. Filter Function Reference: OGC Filter Encoding specification provides generic concept filter function. filter function named function number arguments, can used filter expression perform specific calculations. provides much richer expressiveness defining filters.GeoServer provides many different kinds filter functions, covering wide range functionality including mathematics, string formatting, geometric operations. CQL ECQL Tutorial shows examples defining filters.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"initialise-emodnet-wfs-client","dir":"Articles","previous_headings":"","what":"Initialise EMODnet WFS client","title":"EQCL feature filtering","text":"First, let’s load library start new WFS client emodnet_init_wfs_client.","code":"library(EMODnetWFS) wfs <- emodnet_init_wfs_client(service = \"biology\") #> Loading ISO 19139 XML schemas... #> Loading ISO 19115 codelists... #> Loading IANA mime types... #> No encoding supplied: defaulting to UTF-8. #> ✔ WFS client created succesfully #> ℹ Service: 'https://geo.vliz.be/geoserver/Emodnetbio/wfs' #> ℹ Version: '2.0.0'"},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"inspecting-attributes","dir":"Articles","previous_headings":"","what":"Inspecting attributes","title":"EQCL feature filtering","text":"develop filters, first need information attributes can filter . example, might want know data type range distribution values attributes given layer. Let’s look existing layers.","code":"emodnet_get_wfs_info(wfs)  #> # A tibble: 31 × 9 #>    data_source service_name service_url         layer_namespace layer_name title #>    <chr>       <chr>        <chr>               <chr>           <chr>      <chr> #>  1 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      mediseh_c… EMOD… #>  2 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      mediseh_c… EMOD… #>  3 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      mediseh_c… EMOD… #>  4 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      Species_g… EMOD… #>  5 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      Species_g… EMOD… #>  6 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      Species_g… EMOD… #>  7 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      Species_g… EMOD… #>  8 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      mediseh_h… EMOD… #>  9 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      mediseh_m… EMOD… #> 10 emodnet_wfs biology      https://geo.vliz.b… Emodnetbio      mediseh_m… EMOD… #> # … with 21 more rows, and 3 more variables: abstract <chr>, class <chr>, #> #   format <chr>"},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"layer-attribute-names","dir":"Articles","previous_headings":"Inspecting attributes","what":"Layer attribute names","title":"EQCL feature filtering","text":"start, might want know names layer’s attributes. functions can also used providing service name instead wfs object.","code":"layer_attributes_get_names(wfs, layer = \"mediseh_zostera_m_pnt\") #> [1] \"id\"       \"country\"  \"the_geom\" layer_attributes_get_names(service = \"biology\", layer = \"mediseh_zostera_m_pnt\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://geo.vliz.be/geoserver/Emodnetbio/wfs' #> ℹ Version: '2.0.0' #> [1] \"id\"       \"country\"  \"the_geom\""},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"layer-attribute-descriptions","dir":"Articles","previous_headings":"Inspecting attributes","what":"Layer attribute descriptions","title":"EQCL feature filtering","text":"type filtering might want apply depend data type attribute. can inspect attribute descriptions (metadata) given layer layer_attribute_descriptions().","code":"layer_attribute_descriptions(wfs, layer = \"mediseh_zostera_m_pnt\") #>       name      type minOccurs maxOccurs nillable #> 1       id   integer         0         1     TRUE #> 2  country character         0         1     TRUE #> 3 the_geom  geometry         0         1     TRUE"},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"layer-attribute-summaries","dir":"Articles","previous_headings":"Inspecting attributes","what":"Layer attribute summaries","title":"EQCL feature filtering","text":"can get summaries values attribute layer_attributes_summarise(). function basically runs summary() attribute columns layer.","code":"layer_attributes_summarise(wfs, layer = \"mediseh_zostera_m_pnt\") #>     gml_id                id      country          #>  Length:54          Min.   :0   Length:54          #>  Class :character   1st Qu.:0   Class :character   #>  Mode  :character   Median :0   Mode  :character   #>                     Mean   :0                      #>                     3rd Qu.:0                      #>                     Max.   :0"},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"inspecting-individual-layer-attributes","dir":"Articles","previous_headings":"Inspecting attributes","what":"Inspecting individual layer attributes","title":"EQCL feature filtering","text":"can also inspect individual attributes , case categorical variables, can give detailed information names distribution categories.","code":"layer_attribute_inspect(wfs, layer = \"mediseh_zostera_m_pnt\", attribute = \"country\") #>         .  n    percent #>   Croazia  4 0.07407407 #>   Francia  1 0.01851852 #>    Italia 30 0.55555556 #>     Libia  2 0.03703704 #>  Slovenia  8 0.14814815 #>    Spagna  8 0.14814815 #>   Tunisia  1 0.01851852"},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"layer-attributes-table","dir":"Articles","previous_headings":"","what":"Layer attributes table","title":"EQCL feature filtering","text":"Finally, enable full inspection custom processing attribute data, can download full set attributes data.frame, excluding geometry column. geometries usually largest column, much faster downloading full layer can useful developing attribute filtering rules. Data summary Variable type: character Variable type: numeric","code":"attr_tbl <- layer_attributes_tbl(wfs, layer = \"mediseh_zostera_m_pnt\")  attr_tbl #> # A tibble: 54 × 3 #>    gml_id                      id country #>    <chr>                    <int> <chr>   #>  1 mediseh_zostera_m_pnt.1      0 Spagna  #>  2 mediseh_zostera_m_pnt.2      0 Spagna  #>  3 mediseh_zostera_m_pnt.3      0 Spagna  #>  4 mediseh_zostera_m_pnt.4      0 Spagna  #>  5 mediseh_zostera_m_pnt.5      0 Spagna  #>  6 mediseh_zostera_m_pnt.6      0 Spagna  #>  7 mediseh_zostera_m_pnt.7      0 Spagna  #>  8 mediseh_zostera_m_pnt.8      0 Francia #>  9 mediseh_zostera_m_pnt.9      0 Italia  #> 10 mediseh_zostera_m_pnt.10     0 Italia  #> # … with 44 more rows skimr::skim(attr_tbl)"},{"path":[]},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"filtering-categorical-attributes-values-using-text-comparisons","dir":"Articles","previous_headings":"Filtering by attributes","what":"Filtering categorical attributes values using text comparisons","title":"EQCL feature filtering","text":"know values categorical attribute layer, can use filter features returned query. example, let’s say interested results France. previous interrogation attributes associated mediseh_zostera_m_pnt layer, seen attribute country contains country. can use name attribute value require construct eqcl filter pass request using cql_filter argument. shows basic text comparisons can make use equality operator =. want match one value, can use operator instead provide list values compare . example, request France Spain, use following filter: using filter: text comparisons include text pattern matching using operator LIKE. example, request maritime boundaries countries starting S, can use following filter: CQL/ECQL filters can also include filter functions available GeoServer, including multiple string functions greatly increases power CQL expressions. example, can request countries contain l anywhere, including first letter. make request case independent, can turn country names lowercase use like comparison lowercase l:","code":"emodnet_get_layers(     wfs,      layers = \"mediseh_zostera_m_pnt\",     cql_filter = \"country = 'Francia'\"  ) #> $mediseh_zostera_m_pnt #> Simple feature collection with 1 feature and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 4.84864 ymin: 43.37637 xmax: 4.84864 ymax: 43.37637 #> Geodetic CRS:  WGS 84 #>                    gml_id id country                 the_geom #> 1 mediseh_zostera_m_pnt.8  0 Francia POINT (4.84864 43.37637) emodnet_get_layers(     wfs,      layers = \"mediseh_zostera_m_pnt\",      cql_filter = \"country IN ('Francia', 'Spagna')\"  ) #> $mediseh_zostera_m_pnt #> Simple feature collection with 9 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -4.167154 ymin: 36.71226 xmax: 4.84864 ymax: 43.37637 #> Geodetic CRS:  WGS 84 #>                     gml_id id country                   the_geom #> 1  mediseh_zostera_m_pnt.1  0  Spagna  POINT (-2.61314 36.71681) #> 2  mediseh_zostera_m_pnt.2  0  Spagna POINT (-3.846598 36.75127) #> 3  mediseh_zostera_m_pnt.3  0  Spagna POINT (-3.957785 36.72266) #> 4  mediseh_zostera_m_pnt.4  0  Spagna POINT (-4.039712 36.74217) #> 5  mediseh_zostera_m_pnt.5  0  Spagna POINT (-4.100182 36.72331) #> 6  mediseh_zostera_m_pnt.6  0  Spagna POINT (-4.167154 36.71226) #> 7  mediseh_zostera_m_pnt.7  0  Spagna POINT (-1.268366 37.55797) #> 8  mediseh_zostera_m_pnt.8  0 Francia   POINT (4.84864 43.37637) #> 9 mediseh_zostera_m_pnt.54  0  Spagna  POINT (3.291868 42.29132) emodnet_get_layers(     wfs,      layers = \"mediseh_zostera_m_pnt\",      cql_filter = \"country='Francia' OR country='Spagna')\" ) #> Warning: Download of layer 'mediseh_zostera_m_pnt' failed: Error: Cannot open \"/tmp/RtmpKjsPoa/file3c982baf5952.gml\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats. #>  #> $mediseh_zostera_m_pnt #> NULL emodnet_get_layers(     wfs = wfs,      layers = \"mediseh_zostera_m_pnt\",     cql_filter = \"country LIKE 'S%'\",                        reduce_layers = TRUE  ) #> Simple feature collection with 16 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -4.167154 ymin: 36.71226 xmax: 13.73725 ymax: 45.58252 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                      gml_id id  country                   the_geom #> 1   mediseh_zostera_m_pnt.1  0   Spagna  POINT (-2.61314 36.71681) #> 2   mediseh_zostera_m_pnt.2  0   Spagna POINT (-3.846598 36.75127) #> 3   mediseh_zostera_m_pnt.3  0   Spagna POINT (-3.957785 36.72266) #> 4   mediseh_zostera_m_pnt.4  0   Spagna POINT (-4.039712 36.74217) #> 5   mediseh_zostera_m_pnt.5  0   Spagna POINT (-4.100182 36.72331) #> 6   mediseh_zostera_m_pnt.6  0   Spagna POINT (-4.167154 36.71226) #> 7   mediseh_zostera_m_pnt.7  0   Spagna POINT (-1.268366 37.55797) #> 8  mediseh_zostera_m_pnt.39  0 Slovenia  POINT (13.73725 45.56948) #> 9  mediseh_zostera_m_pnt.40  0 Slovenia  POINT (13.70701 45.58252) #> 10 mediseh_zostera_m_pnt.41  0 Slovenia  POINT (13.71894 45.54535) emodnet_get_layers(     wfs = wfs,      layers = \"mediseh_zostera_m_pnt\",     cql_filter = \"strToLowerCase(country) LIKE '%l%'\",     reduce_layers = TRUE  ) #> Simple feature collection with 40 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 11.71682 ymin: 33.07782 xmax: 14.4714 ymax: 45.72451 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                      gml_id id country                  the_geom #> 1   mediseh_zostera_m_pnt.9  0  Italia POINT (13.71831 45.70017) #> 2  mediseh_zostera_m_pnt.10  0  Italia POINT (13.16378 45.72451) #> 3  mediseh_zostera_m_pnt.11  0  Italia POINT (13.35982 45.70508) #> 4  mediseh_zostera_m_pnt.12  0  Italia POINT (12.26722 45.25975) #> 5  mediseh_zostera_m_pnt.13  0  Italia   POINT (12.31285 45.362) #> 6  mediseh_zostera_m_pnt.14  0  Italia POINT (12.53509 45.53269) #> 7  mediseh_zostera_m_pnt.15  0  Italia  POINT (12.48269 45.5065) #> 8  mediseh_zostera_m_pnt.16  0  Italia POINT (12.77334 43.96751) #> 9  mediseh_zostera_m_pnt.17  0  Italia POINT (13.62604 43.50809) #> 10 mediseh_zostera_m_pnt.18  0  Italia POINT (13.46398 43.60892)"},{"path":[]},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"filtering-numeric-variables","dir":"Articles","previous_headings":"Filtering by attributes","what":"Filtering numeric variables","title":"EQCL feature filtering","text":"number additional comparison operators, =, <>, >, >=, <, <= , arithmetic operators +, -, *, / well comparison math functions can used filtering numeric variables. time ’ll use mediseh_posidonia_nodata. can inspect use interrogative functions get information layer attributes. can see values range 0.23 ~473 mean ~40. Let’s say interested values greater 400. can use operator > create filter: request range can use filter functions .","code":"layer_attributes_get_names(wfs, layer = \"mediseh_posidonia_nodata\") #> [1] \"id\"       \"km\"       \"the_geom\"  layer_attribute_inspect(wfs, layer = \"mediseh_posidonia_nodata\", attribute = \"km\") #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #>   0.2371   6.0306  16.6190  40.1771  42.8958 472.9613 emodnet_get_layers(     wfs = wfs,      layers = \"mediseh_posidonia_nodata\",     cql_filter = \"km > 400\",     reduce_layers = TRUE  ) #> Simple feature collection with 4 features and 3 fields #> Geometry type: MULTICURVE #> Dimension:     XY #> Bounding box:  xmin: -1.572609 ymin: 35.24538 xmax: 28.33243 ymax: 38.68017 #> Geodetic CRS:  WGS 84 #>                         gml_id id       km                       the_geom #> 1   mediseh_posidonia_nodata.8  0 456.3759 MULTICURVE (LINESTRING (2.3... #> 2 mediseh_posidonia_nodata.227  0 464.6573 MULTICURVE (LINESTRING (26.... #> 3 mediseh_posidonia_nodata.228  0 472.9613 MULTICURVE (LINESTRING (26.... #> 4 mediseh_posidonia_nodata.229  0 463.8207 MULTICURVE (LINESTRING (27.... emodnet_get_layers(     wfs = wfs,      layers = \"mediseh_posidonia_nodata\",     cql_filter = \"km between 40 and 400\",     reduce_layers = TRUE  ) #> Simple feature collection with 120 features and 3 fields #> Geometry type: MULTICURVE #> Dimension:     XY #> Bounding box:  xmin: -2.1798 ymin: 30.26623 xmax: 34.59127 ymax: 45.35511 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                         gml_id id        km                       the_geom #> 1   mediseh_posidonia_nodata.1  0 291.50323 MULTICURVE (LINESTRING (27.... #> 2   mediseh_posidonia_nodata.2  0  75.37950 MULTICURVE (LINESTRING (23.... #> 3   mediseh_posidonia_nodata.4  0 110.34480 MULTICURVE (LINESTRING (19.... #> 4  mediseh_posidonia_nodata.13  0  66.99746 MULTICURVE (LINESTRING (9.1... #> 5   mediseh_posidonia_nodata.5  0 222.44651 MULTICURVE (LINESTRING (8.6... #> 6   mediseh_posidonia_nodata.6  0  58.72822 MULTICURVE (LINESTRING (6.8... #> 7   mediseh_posidonia_nodata.7  0 192.50519 MULTICURVE (LINESTRING (6.4... #> 8  mediseh_posidonia_nodata.10  0  65.74354 MULTICURVE (LINESTRING (-1.... #> 9  mediseh_posidonia_nodata.11  0 138.68819 MULTICURVE (LINESTRING (4.8... #> 10 mediseh_posidonia_nodata.17  0 184.05959 MULTICURVE (LINESTRING (10...."},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"filtering-with-spatial-predicates","dir":"Articles","previous_headings":"Filtering by attributes","what":"Filtering with spatial predicates","title":"EQCL feature filtering","text":"Another powerful option filtering features using spatial predicates example, use ECQL spatial predicate BBOX() request features intersect defined bounding box. Note geom name attribute contains feature geometries, coordinates supplied sequence xmin, xmax, ymin, ymax query default use CRS queried layer unless additional CRS argument provided.","code":"bbox_filter <- emodnet_get_layers(     wfs = wfs,      layers = \"mediseh_posidonia_nodata\",     cql_filter = \"BBOX(geom, 2565427, 4026324, 1522239, 2778536)\",     reduce_layers = TRUE  ) map <- bbox_filter %>%      sf::st_cast(to = \"GEOMETRYCOLLECTION\") %>%      sf::st_collection_extract(type = \"POLYGON\") %>% mapview::mapview(zcol = \"folk_7cl_txt\", burst = TRUE)  map"},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"using-or-and-and-statements","dir":"Articles","previous_headings":"Filtering by attributes","what":"Using OR and AND statements","title":"EQCL feature filtering","text":"Filter conditions can also logical combination conditions using , . showed previously use list potential values match attribute . also achieved using statement. example, following query returns features country either Baltic Sea Bulgaria. Let’s say also want restrict features returned shape_length > 1. can include additional condition must met using statement. query returns features country Baltic Sea Bulgaria can see minimum value minimum set filter. ’s filter added country='Bulgaria', features shape_length > 1 returned country also Bulgaria, filter applied shape_length country Baltic Sea. add filter filters, can use parenthesis: Now minimum value indeed 1. However, get features country 'Bulgaria'. ’s single Baltic Sea feature shape_length value smaller 1 filtered . Finally filtering shape_length < 1 returns features shape_length values smaller 1 country values.","code":"wfs <- emodnet_init_wfs_client(service = \"geology_seabed_substrate_maps\") emodnet_get_layers(     wfs = wfs,      layers = \"seabed_substrate_1m\",     cql_filter = \"country='Baltic Sea' OR country='Bulgaria'\",     reduce_layers = TRUE  ) filter_sf1 <- emodnet_get_layers(     wfs = wfs,      layers = \"seabed_substrate_1m\",     cql_filter = \"country='Baltic Sea' OR country='Bulgaria' AND shape_length>1\",     reduce_layers = TRUE  ) filter_sf1 unique(filter_sf1$country)  min(filter_sf1$shape_length) filter_sf2 <- emodnet_get_layers(     wfs = wfs,      layers = \"seabed_substrate_1m\",     cql_filter = \"(country='Baltic Sea' OR country='Bulgaria') AND shape_length>1\",     reduce_layers = TRUE  ) min(filter_sf2$shape_length) unique(filter_sf2$country) filter_sf3 <- emodnet_get_layers(     wfs = wfs,      layers = \"seabed_substrate_1m\",     cql_filter = \"(country='Baltic Sea' OR country='Bulgaria') AND shape_length<1\",     reduce_layers = TRUE  ) max(filter_sf3$shape_length) unique(filter_sf3$country)"},{"path":"https://emodnet.github.io/EMODnetWFS/articles/eqcl_filtering.html","id":"advanced-use","dir":"Articles","previous_headings":"Filtering by attributes","what":"Advanced use","title":"EQCL feature filtering","text":"can accomplished using EMODnet WFS services downloading data. EMODnetWFS package built top ows4R library, meaning functionalities package available EMODnetWFS. ows4R returns special type R object called R6. can learn Hadley Wickham’s chapter R6 Objects Advance R book. instance: efficient read large dataset R just later subset part . requires longer waiting times bandwidth usage, large datasets simply possible. instance, occurrences data available EMODnet Biology portal stored one table: approximately 30 millions rows! case, suggest access EMODnet Biology occurrence data download toolbox eurobis R package instead.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anna Krystalli. Author. Salvador Fernández-Bejarano. Contributor, maintainer. Thomas J Webb. Contributor. European Marine Observation Data Network (EMODnet) Biology project European Commission's Directorate - General Maritime Affairs Fisheries (DG MARE). Copyright holder. VLIZ (VLAAMS INSTITUUT VOOR DE ZEE). Funder. Maëlle Salmon. Author.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Krystalli (2020). EMODnetWFS: Access EMODnet Web Feature Service data R. R package version 2.0.1.9000. Integrated data products created European Marine Observation Data Network (EMODnet) Biology project (EASME/EMFF/2017/1.3.1.2/02/SI2.789013), funded European Union Regulation (EU) 508/2014 European Parliament Council 15 May 2014 European Maritime Fisheries Fund, https://github.com/EMODnet/EMODnetWFS.","code":"@Manual{,   title = {{EMODnetWFS}: Access EMODnet Web Feature Service data through R},   author = {Anna Krystalli},   year = {2020},   note = {R package version 2.0.1.9000. Integrated data products created under the European Marine Observation Data Network (EMODnet) Biology project (EASME/EMFF/2017/1.3.1.2/02/SI2.789013), funded by the by the European Union under Regulation (EU) No 508/2014 of the European Parliament and of the Council of 15 May 2014 on the European Maritime and Fisheries Fund},   url = {https://github.com/EMODnet/EMODnetWFS}, }"},{"path":"https://emodnet.github.io/EMODnetWFS/index.html","id":"emodnetwfs-access-emodnet-web-feature-service-data-through-r","dir":"","previous_headings":"","what":"Access EMODnet Web Feature Service data through R","title":"Access EMODnet Web Feature Service data through R","text":"goal EMODnetWFS allow interrogation access EMODnet geographic vector data R though EMODnet Web Feature Services. Web Feature services (WFS) represent change way geographic information created, modified exchanged Internet offer direct fine-grained access geographic information feature feature property level. package developed Sheffield University EMODnet Biology WP4 data products workshop June 2020. can read product story EMODnet-Biology portal following link, read vignette directly R installing package.","code":"vignette(\"emodnetwfs\")"},{"path":"https://emodnet.github.io/EMODnetWFS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access EMODnet Web Feature Service data through R","text":"can install development version EMODnetWFS GitHub :","code":"remotes::install_github(\"EMODnet/EMODnetWFS\")"},{"path":"https://emodnet.github.io/EMODnetWFS/index.html","id":"available-services","dir":"","previous_headings":"","what":"Available services","title":"Access EMODnet Web Feature Service data through R","text":"available services contained tibble returned emodnet_wfs(). explore available services Rstudio use:","code":"View(emodnet_wfs())"},{"path":"https://emodnet.github.io/EMODnetWFS/index.html","id":"create-service-client","dir":"","previous_headings":"","what":"Create Service Client","title":"Access EMODnet Web Feature Service data through R","text":"Create new WFS Client. Specify service using service argument.","code":"wfs_bio <- emodnet_init_wfs_client(service = \"biology\") #> Loading ISO 19139 XML schemas... #> Loading ISO 19115 codelists... #> Loading IANA mime types... #> No encoding supplied: defaulting to UTF-8. #> ✓ WFS client created succesfully #> ℹ Service: 'http://geo.vliz.be/geoserver/Emodnetbio/wfs' #> ℹ Version: '2.0.0'  wfs_bio$getUrl() #> [1] \"http://geo.vliz.be/geoserver/Emodnetbio/wfs\""},{"path":"https://emodnet.github.io/EMODnetWFS/index.html","id":"get-wfs-layer-info","dir":"","previous_headings":"","what":"Get WFS Layer info","title":"Access EMODnet Web Feature Service data through R","text":"can get metadata layers available service. can pass wfs client object. can also get info specific layers wfs object: Finally, can get details available services layers server","code":"emodnet_get_wfs_info(service = \"biology\") #> ✓ WFS client created succesfully #> ℹ Service: 'http://geo.vliz.be/geoserver/Emodnetbio/wfs' #> ℹ Version: '2.0.0' #> # A tibble: 31 × 9 #>    data_source service_name service_url         layer_namespace layer_name title #>    <chr>       <chr>        <chr>               <chr>           <chr>      <chr> #>  1 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  2 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  3 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  4 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  5 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  6 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  7 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  8 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_h… EMOD… #>  9 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_m… EMOD… #> 10 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_m… EMOD… #> # … with 21 more rows, and 3 more variables: abstract <chr>, class <chr>, #> #   format <chr> emodnet_get_wfs_info(wfs_bio) #> # A tibble: 31 × 9 #>    data_source service_name service_url         layer_namespace layer_name title #>    <chr>       <chr>        <chr>               <chr>           <chr>      <chr> #>  1 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  2 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  3 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  4 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  5 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  6 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  7 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  8 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_h… EMOD… #>  9 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_m… EMOD… #> 10 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_m… EMOD… #> # … with 21 more rows, and 3 more variables: abstract <chr>, class <chr>, #> #   format <chr> wfs_cml <- emodnet_init_wfs_client(\"biology\") #> ✓ WFS client created succesfully #> ℹ Service: 'http://geo.vliz.be/geoserver/Emodnetbio/wfs' #> ℹ Version: '2.0.0' emodnet_get_wfs_info(wfs_cml) #> # A tibble: 31 × 9 #>    data_source service_name service_url         layer_namespace layer_name title #>    <chr>       <chr>        <chr>               <chr>           <chr>      <chr> #>  1 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  2 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  3 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_c… EMOD… #>  4 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  5 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  6 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  7 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      Species_g… EMOD… #>  8 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_h… EMOD… #>  9 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_m… EMOD… #> 10 emodnet_wfs biology      http://geo.vliz.be… Emodnetbio      mediseh_m… EMOD… #> # … with 21 more rows, and 3 more variables: abstract <chr>, class <chr>, #> #   format <chr>  layers <- c(\"mediseh_zostera_m_pnt\",\"mediseh_posidonia_nodata\")  emodnet_get_layer_info(wfs = wfs_cml, layers = layers) #> # A tibble: 2 × 9 #>   data_source service_name service_url layer_namespace layer_name title abstract #>   <chr>       <chr>        <chr>       <chr>           <chr>      <chr> <chr>    #> 1 emodnet_wfs http://geo.… biology     Emodnetbio      mediseh_p… EMOD… \"Coastl… #> 2 emodnet_wfs http://geo.… biology     Emodnetbio      mediseh_z… EMOD… \"Zoster… #> # … with 2 more variables: class <chr>, format <chr> emodnet_get_all_wfs_info()"},{"path":"https://emodnet.github.io/EMODnetWFS/index.html","id":"get-wfs-layers","dir":"","previous_headings":"","what":"Get WFS layers","title":"Access EMODnet Web Feature Service data through R","text":"can extract layers directly wfs object using layer names. layers downloaded sf objects output list named element layer requested. can change output crs argument crs. can also extract layers directly WFS service. Layers can also returned single sf object argument reduce_layers. TRUE function try reduce layers single sf. attempting reduce fails, return list warning: Using reduce_layers = TRUE also useful returning sf object rather list single layer request.","code":"emodnet_get_layers(wfs = wfs_cml, layers = layers) #> $mediseh_zostera_m_pnt #> Simple feature collection with 54 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -4.167154 ymin: 33.07782 xmax: 15.35766 ymax: 45.72451 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                      gml_id id country                   the_geom #> 1   mediseh_zostera_m_pnt.1  0  Spagna  POINT (-2.61314 36.71681) #> 2   mediseh_zostera_m_pnt.2  0  Spagna POINT (-3.846598 36.75127) #> 3   mediseh_zostera_m_pnt.3  0  Spagna POINT (-3.957785 36.72266) #> 4   mediseh_zostera_m_pnt.4  0  Spagna POINT (-4.039712 36.74217) #> 5   mediseh_zostera_m_pnt.5  0  Spagna POINT (-4.100182 36.72331) #> 6   mediseh_zostera_m_pnt.6  0  Spagna POINT (-4.167154 36.71226) #> 7   mediseh_zostera_m_pnt.7  0  Spagna POINT (-1.268366 37.55797) #> 8   mediseh_zostera_m_pnt.8  0 Francia   POINT (4.84864 43.37637) #> 9   mediseh_zostera_m_pnt.9  0  Italia  POINT (13.71831 45.70017) #> 10 mediseh_zostera_m_pnt.10  0  Italia  POINT (13.16378 45.72451) #>  #> $mediseh_posidonia_nodata #> Simple feature collection with 465 features and 3 fields #> Geometry type: MULTICURVE #> Dimension:     XY #> Bounding box:  xmin: -2.1798 ymin: 30.26623 xmax: 34.60767 ymax: 45.47668 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                         gml_id id         km                       the_geom #> 1   mediseh_posidonia_nodata.1  0 291.503233 MULTICURVE (LINESTRING (27.... #> 2   mediseh_posidonia_nodata.2  0  75.379502 MULTICURVE (LINESTRING (23.... #> 3   mediseh_posidonia_nodata.3  0  38.627764 MULTICURVE (LINESTRING (22.... #> 4   mediseh_posidonia_nodata.4  0 110.344802 MULTICURVE (LINESTRING (19.... #> 5  mediseh_posidonia_nodata.13  0  66.997461 MULTICURVE (LINESTRING (9.1... #> 6  mediseh_posidonia_nodata.14  0  18.090640 MULTICURVE (LINESTRING (9.7... #> 7  mediseh_posidonia_nodata.15  0  16.618978 MULTICURVE (LINESTRING (9.8... #> 8  mediseh_posidonia_nodata.16  0   1.913773 MULTICURVE (LINESTRING (10.... #> 9  mediseh_posidonia_nodata.83  0   2.173447 MULTICURVE (LINESTRING (15.... #> 10 mediseh_posidonia_nodata.84  0   2.817453 MULTICURVE (LINESTRING (15.... emodnet_get_layers(wfs = wfs_cml, layers = layers, crs = 3857) #> ℹ crs transformed to 3857. #> ℹ crs transformed to 3857. #> $mediseh_zostera_m_pnt #> Simple feature collection with 54 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -463885.5 ymin: 3905638 xmax: 1709607 ymax: 5736311 #> Projected CRS: WGS 84 / Pseudo-Mercator #> First 10 features: #>                      gml_id id country                  the_geom #> 1   mediseh_zostera_m_pnt.1  0  Spagna POINT (-290893.4 4399707) #> 2   mediseh_zostera_m_pnt.2  0  Spagna POINT (-428201.3 4404494) #> 3   mediseh_zostera_m_pnt.3  0  Spagna POINT (-440578.6 4400520) #> 4   mediseh_zostera_m_pnt.4  0  Spagna POINT (-449698.7 4403229) #> 5   mediseh_zostera_m_pnt.5  0  Spagna POINT (-456430.2 4400610) #> 6   mediseh_zostera_m_pnt.6  0  Spagna POINT (-463885.5 4399075) #> 7   mediseh_zostera_m_pnt.7  0  Spagna POINT (-141193.9 4517168) #> 8   mediseh_zostera_m_pnt.8  0 Francia  POINT (539748.1 5369436) #> 9   mediseh_zostera_m_pnt.9  0  Italia   POINT (1527115 5732431) #> 10 mediseh_zostera_m_pnt.10  0  Italia   POINT (1465385 5736311) #>  #> $mediseh_posidonia_nodata #> Simple feature collection with 465 features and 3 fields #> Geometry type: MULTICURVE #> Dimension:     XY #> Bounding box:  xmin: -242654.2 ymin: 3537818 xmax: 3852508 ymax: 5696879 #> Projected CRS: WGS 84 / Pseudo-Mercator #> First 10 features: #>                         gml_id id         km                       the_geom #> 1   mediseh_posidonia_nodata.1  0 291.503233 MULTICURVE (LINESTRING (302... #> 2   mediseh_posidonia_nodata.2  0  75.379502 MULTICURVE (LINESTRING (257... #> 3   mediseh_posidonia_nodata.3  0  38.627764 MULTICURVE (LINESTRING (246... #> 4   mediseh_posidonia_nodata.4  0 110.344802 MULTICURVE (LINESTRING (221... #> 5  mediseh_posidonia_nodata.13  0  66.997461 MULTICURVE (LINESTRING (101... #> 6  mediseh_posidonia_nodata.14  0  18.090640 MULTICURVE (LINESTRING (108... #> 7  mediseh_posidonia_nodata.15  0  16.618978 MULTICURVE (LINESTRING (110... #> 8  mediseh_posidonia_nodata.16  0   1.913773 MULTICURVE (LINESTRING (121... #> 9  mediseh_posidonia_nodata.83  0   2.173447 MULTICURVE (LINESTRING (169... #> 10 mediseh_posidonia_nodata.84  0   2.817453 MULTICURVE (LINESTRING (169... emodnet_get_layers(     service = \"biology\",     layers = c(\"mediseh_zostera_m_pnt\", \"mediseh_posidonia_nodata\") ) #> ✓ WFS client created succesfully #> ℹ Service: 'http://geo.vliz.be/geoserver/Emodnetbio/wfs' #> ℹ Version: '2.0.0' #> $mediseh_zostera_m_pnt #> Simple feature collection with 54 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -4.167154 ymin: 33.07782 xmax: 15.35766 ymax: 45.72451 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                      gml_id id country                   the_geom #> 1   mediseh_zostera_m_pnt.1  0  Spagna  POINT (-2.61314 36.71681) #> 2   mediseh_zostera_m_pnt.2  0  Spagna POINT (-3.846598 36.75127) #> 3   mediseh_zostera_m_pnt.3  0  Spagna POINT (-3.957785 36.72266) #> 4   mediseh_zostera_m_pnt.4  0  Spagna POINT (-4.039712 36.74217) #> 5   mediseh_zostera_m_pnt.5  0  Spagna POINT (-4.100182 36.72331) #> 6   mediseh_zostera_m_pnt.6  0  Spagna POINT (-4.167154 36.71226) #> 7   mediseh_zostera_m_pnt.7  0  Spagna POINT (-1.268366 37.55797) #> 8   mediseh_zostera_m_pnt.8  0 Francia   POINT (4.84864 43.37637) #> 9   mediseh_zostera_m_pnt.9  0  Italia  POINT (13.71831 45.70017) #> 10 mediseh_zostera_m_pnt.10  0  Italia  POINT (13.16378 45.72451) #>  #> $mediseh_posidonia_nodata #> Simple feature collection with 465 features and 3 fields #> Geometry type: MULTICURVE #> Dimension:     XY #> Bounding box:  xmin: -2.1798 ymin: 30.26623 xmax: 34.60767 ymax: 45.47668 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                         gml_id id         km                       the_geom #> 1   mediseh_posidonia_nodata.1  0 291.503233 MULTICURVE (LINESTRING (27.... #> 2   mediseh_posidonia_nodata.2  0  75.379502 MULTICURVE (LINESTRING (23.... #> 3   mediseh_posidonia_nodata.3  0  38.627764 MULTICURVE (LINESTRING (22.... #> 4   mediseh_posidonia_nodata.4  0 110.344802 MULTICURVE (LINESTRING (19.... #> 5  mediseh_posidonia_nodata.13  0  66.997461 MULTICURVE (LINESTRING (9.1... #> 6  mediseh_posidonia_nodata.14  0  18.090640 MULTICURVE (LINESTRING (9.7... #> 7  mediseh_posidonia_nodata.15  0  16.618978 MULTICURVE (LINESTRING (9.8... #> 8  mediseh_posidonia_nodata.16  0   1.913773 MULTICURVE (LINESTRING (10.... #> 9  mediseh_posidonia_nodata.83  0   2.173447 MULTICURVE (LINESTRING (15.... #> 10 mediseh_posidonia_nodata.84  0   2.817453 MULTICURVE (LINESTRING (15.... emodnet_get_layers(     wfs = wfs_cml,      layers = layers,     reduce_layers = TRUE ) #> Error: Cannot reduce layers. #> Try again with `reduce_layers = FALSE` emodnet_get_layers(     service = \"biology\",     layers = c(\"mediseh_posidonia_nodata\"),      reduce_layers = TRUE ) #> ✓ WFS client created succesfully #> ℹ Service: 'http://geo.vliz.be/geoserver/Emodnetbio/wfs' #> ℹ Version: '2.0.0' #> Simple feature collection with 465 features and 3 fields #> Geometry type: MULTICURVE #> Dimension:     XY #> Bounding box:  xmin: -2.1798 ymin: 30.26623 xmax: 34.60767 ymax: 45.47668 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                         gml_id id         km                       the_geom #> 1   mediseh_posidonia_nodata.1  0 291.503233 MULTICURVE (LINESTRING (27.... #> 2   mediseh_posidonia_nodata.2  0  75.379502 MULTICURVE (LINESTRING (23.... #> 3   mediseh_posidonia_nodata.3  0  38.627764 MULTICURVE (LINESTRING (22.... #> 4   mediseh_posidonia_nodata.4  0 110.344802 MULTICURVE (LINESTRING (19.... #> 5  mediseh_posidonia_nodata.13  0  66.997461 MULTICURVE (LINESTRING (9.1... #> 6  mediseh_posidonia_nodata.14  0  18.090640 MULTICURVE (LINESTRING (9.7... #> 7  mediseh_posidonia_nodata.15  0  16.618978 MULTICURVE (LINESTRING (9.8... #> 8  mediseh_posidonia_nodata.16  0   1.913773 MULTICURVE (LINESTRING (10.... #> 9  mediseh_posidonia_nodata.83  0   2.173447 MULTICURVE (LINESTRING (15.... #> 10 mediseh_posidonia_nodata.84  0   2.817453 MULTICURVE (LINESTRING (15...."},{"path":"https://emodnet.github.io/EMODnetWFS/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Access EMODnet Web Feature Service data through R","text":"Please cite package : Anna Krystalli (2020). EMODnetWFS: Access EMODnet Web Feature Service data R. R package version 0.0.2. https://github.com/EMODnet/EMODnetWFS. Integrated data products created European Marine Observation Data Network (EMODnet) Biology project (EASME/EMFF/2017/1.3.1.2/02/SI2.789013), funded European Union Regulation (EU) 508/2014 European Parliament Council 15 May 2014 European Maritime Fisheries Fund.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get EMODnet WFS layers — emodnet_get_layers","title":"Get EMODnet WFS layers — emodnet_get_layers","text":"Performs WFS getFeature request layers wfs object specified EMODnet Service. Filtering layer features can also handled via ECQL language filters.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get EMODnet WFS layers — emodnet_get_layers","text":"","code":"emodnet_get_layers(   wfs = NULL,   service = NULL,   service_version = \"2.0.0\",   layers,   crs = NULL,   cql_filter = NULL,   reduce_layers = FALSE,   suppress_warnings = FALSE )"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get EMODnet WFS layers — emodnet_get_layers","text":"wfs WFSClient R6 object methods interfacing OGC Web Feature Service. service EMODnet OGC WFS service name. available services, see emodnet_wfs. service_version WFS service version. Defaults \"2.0.0\". layers character vector layer names. get info layers, including layer_name use emodnet_get_wfs_info(). crs integer. EPSG code output crs. NULL (default), layers returned original crs. cql_filter character. Features returned can filtered using valid Extended Common Query Language (ECQL) filtering statements (https://docs.geoserver.org/stable/en/user/filter/ecql_reference.html). one : character string character vector length 1. Filter recycled across layers requested character vector length equal length layers. Filter matched layers sequentially. Elements containing NA ignored named character vector. filter applied layer corresponding filter name. Filters names correspond layers ignored. Layers without corresponding filters returned whole reduce_layers whether reduce output layers single sf object. suppress_warnings logical. Whether suppress messages layer download failures.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_layers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get EMODnet WFS layers — emodnet_get_layers","text":"reduce_layers = FALSE (default), list sfobjects, one element layer. layers download unsuccessful NULL. reduce_layers = TRUE, layers reduced (possible) single sf containing data layers. NULL layers ignored. reduce_layers = TRUE can also used return sf single layer request instead list length 1.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_layers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get EMODnet WFS layers — emodnet_get_layers","text":"","code":"# \\dontrun{ # Layers as character vector emodnet_get_layers(   service = \"seabed_habitats_individual_habitat_map_and_model_datasets\",   layers = c(\"dk003069\", \"dk003070\")  ) #> Loading ISO 19139 XML schemas... #> Loading ISO 19115 codelists... #> Loading IANA mime types... #> No encoding supplied: defaulting to UTF-8. #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-seabedhabitats.eu/geoserver/emodnet_open_maplibrary/wfs' #> ℹ Version: '2.0.0' #> $dk003069 #> Simple feature collection with 82 features and 8 fields #> Geometry type: MULTISURFACE #> Dimension:     XY #> Bounding box:  xmin: 1065918 ymin: 7318084 xmax: 1140377 ymax: 7385447 #> Projected CRS: WGS 84 / Pseudo-Mercator #> First 10 features: #>            gml_id   gid      gui polygon annexi         subtype confidence #> 1  dk003069.39813 39813 DK003069      30   1170 Geogenic origin       High #> 2  dk003069.39847 39847 DK003069      64   1110            <NA>       High #> 3  dk003069.39794 39794 DK003069      11   1170 Geogenic origin       High #> 4  dk003069.39787 39787 DK003069       4   1170 Geogenic origin       High #> 5  dk003069.39809 39809 DK003069      26   1170 Geogenic origin       High #> 6  dk003069.39806 39806 DK003069      23   1170 Geogenic origin       High #> 7  dk003069.39801 39801 DK003069      18   1170 Geogenic origin       High #> 8  dk003069.39805 39805 DK003069      22   1170 Geogenic origin       High #> 9  dk003069.39827 39827 DK003069      44   1170 Geogenic origin       High #> 10 dk003069.39849 39849 DK003069      66   1110            <NA>       High #>    val_comm                           geom #> 1      <NA> MULTISURFACE (POLYGON ((113... #> 2      <NA> MULTISURFACE (POLYGON ((112... #> 3      <NA> MULTISURFACE (POLYGON ((112... #> 4      <NA> MULTISURFACE (POLYGON ((109... #> 5      <NA> MULTISURFACE (POLYGON ((113... #> 6      <NA> MULTISURFACE (POLYGON ((110... #> 7      <NA> MULTISURFACE (POLYGON ((109... #> 8      <NA> MULTISURFACE (POLYGON ((109... #> 9      <NA> MULTISURFACE (POLYGON ((112... #> 10     <NA> MULTISURFACE (POLYGON ((111... #>  #> $dk003070 #> Simple feature collection with 30 features and 8 fields #> Geometry type: MULTISURFACE #> Dimension:     XY #> Bounding box:  xmin: 1268645 ymin: 7276003 xmax: 1332262 ymax: 7290836 #> Projected CRS: WGS 84 / Pseudo-Mercator #> First 10 features: #>            gml_id   gid      gui polygon annexi         subtype confidence #> 1  dk003070.39886 39886 DK003070      21   1170 Geogenic origin       High #> 2  dk003070.39890 39890 DK003070      25   1170 Geogenic origin       High #> 3  dk003070.39882 39882 DK003070      17   1170 Geogenic origin       High #> 4  dk003070.39875 39875 DK003070      10   1170 Geogenic origin       High #> 5  dk003070.39881 39881 DK003070      16   1170 Geogenic origin       High #> 6  dk003070.39887 39887 DK003070      22   1170 Geogenic origin       High #> 7  dk003070.39885 39885 DK003070      20   1170 Geogenic origin       High #> 8  dk003070.39879 39879 DK003070      14   1170 Geogenic origin       High #> 9  dk003070.39867 39867 DK003070       2   1170 Geogenic origin       High #> 10 dk003070.39873 39873 DK003070       8   1170 Geogenic origin       High #>    val_comm                           geom #> 1      <NA> MULTISURFACE (POLYGON ((131... #> 2      <NA> MULTISURFACE (POLYGON ((131... #> 3      <NA> MULTISURFACE (POLYGON ((128... #> 4      <NA> MULTISURFACE (POLYGON ((130... #> 5      <NA> MULTISURFACE (POLYGON ((128... #> 6      <NA> MULTISURFACE (POLYGON ((131... #> 7      <NA> MULTISURFACE (POLYGON ((131... #> 8      <NA> MULTISURFACE (POLYGON ((129... #> 9      <NA> MULTISURFACE (POLYGON ((129... #> 10     <NA> MULTISURFACE (POLYGON ((128... #>    # Layers as character vector, layers to be reduced emodnet_get_layers(   service = \"seabed_habitats_individual_habitat_map_and_model_datasets\",   layers = c(\"dk003069\", \"dk003070\"),   reduce_layers = TRUE ) #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-seabedhabitats.eu/geoserver/emodnet_open_maplibrary/wfs' #> ℹ Version: '2.0.0' #> Simple feature collection with 112 features and 8 fields #> Geometry type: MULTISURFACE #> Dimension:     XY #> Bounding box:  xmin: 1065918 ymin: 7276003 xmax: 1332262 ymax: 7385447 #> Projected CRS: WGS 84 / Pseudo-Mercator #> First 10 features: #>            gml_id   gid      gui polygon annexi         subtype confidence #> 1  dk003069.39813 39813 DK003069      30   1170 Geogenic origin       High #> 2  dk003069.39847 39847 DK003069      64   1110            <NA>       High #> 3  dk003069.39794 39794 DK003069      11   1170 Geogenic origin       High #> 4  dk003069.39787 39787 DK003069       4   1170 Geogenic origin       High #> 5  dk003069.39809 39809 DK003069      26   1170 Geogenic origin       High #> 6  dk003069.39806 39806 DK003069      23   1170 Geogenic origin       High #> 7  dk003069.39801 39801 DK003069      18   1170 Geogenic origin       High #> 8  dk003069.39805 39805 DK003069      22   1170 Geogenic origin       High #> 9  dk003069.39827 39827 DK003069      44   1170 Geogenic origin       High #> 10 dk003069.39849 39849 DK003069      66   1110            <NA>       High #>    val_comm                           geom #> 1      <NA> MULTISURFACE (POLYGON ((113... #> 2      <NA> MULTISURFACE (POLYGON ((112... #> 3      <NA> MULTISURFACE (POLYGON ((112... #> 4      <NA> MULTISURFACE (POLYGON ((109... #> 5      <NA> MULTISURFACE (POLYGON ((113... #> 6      <NA> MULTISURFACE (POLYGON ((110... #> 7      <NA> MULTISURFACE (POLYGON ((109... #> 8      <NA> MULTISURFACE (POLYGON ((109... #> 9      <NA> MULTISURFACE (POLYGON ((112... #> 10     <NA> MULTISURFACE (POLYGON ((111...  # Usage of cql_filter emodnet_get_layers(   service = \"human_activities\",   layers = \"maritimebnds\",   cql_filter = \"sitename='Territory sea (12 nm)'\",   reduce_layers = TRUE ) #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-humanactivities.eu/wfs' #> ℹ Version: '2.0.0' #> Simple feature collection with 64 features and 12 fields #> Geometry type: MULTICURVE #> Dimension:     XY #> Bounding box:  xmin: -178.3897 ymin: -50.21866 xmax: 169.1762 ymax: 83.8746 #> Geodetic CRS:  WGS 84 #> First 10 features: #>             gml_id objectid mblszotpid localid              sitename legalfound #> 1  maritimebnds.49       49          1   49024 Territory sea (12 nm)       <NA> #> 2  maritimebnds.58       58          1   49064 Territory sea (12 nm)       <NA> #> 3  maritimebnds.59       59          1   49065 Territory sea (12 nm)       <NA> #> 4  maritimebnds.60       60          1   49066 Territory sea (12 nm)       <NA> #> 5  maritimebnds.61       61          1   49087 Territory sea (12 nm)       <NA> #> 6  maritimebnds.62       62          1   49099 Territory sea (12 nm)       <NA> #> 7  maritimebnds.54       54          1   49034 Territory sea (12 nm)       <NA> #> 8  maritimebnds.55       55          1   49036 Territory sea (12 nm)       <NA> #> 9  maritimebnds.56       56          1   49042 Territory sea (12 nm)       <NA> #> 10 maritimebnds.57       57          1   49063 Territory sea (12 nm)       <NA> #>    legalfou_1        country nationalle nutscode               mblsds_mbl #> 1        <NA>         Latvia       <NA>       LV In www.marineregions.org #> 2        <NA>         France       <NA>       FR In www.marineregions.org #> 3        <NA>         France       <NA>       FR In www.marineregions.org #> 4        <NA>         France       <NA>       FR In www.marineregions.org #> 5        <NA>          Spain       <NA>       ES In www.marineregions.org #> 6        <NA>         Cyprus       <NA>       CY In www.marineregions.org #> 7        <NA>         Sweden       <NA>       SE In www.marineregions.org #> 8        <NA> United Kingdom       <NA>       UK In www.marineregions.org #> 9        <NA>         France       <NA>       FR In www.marineregions.org #> 10       <NA>         France       <NA>       FR In www.marineregions.org #>    shape_leng                       the_geom #> 1   12.005746 MULTICURVE (LINESTRING (23.... #> 2    1.949563 MULTICURVE (LINESTRING (42.... #> 3    2.072975 MULTICURVE (LINESTRING (39.... #> 4    1.837879 MULTICURVE (LINESTRING (40.... #> 5   27.878496 MULTICURVE (LINESTRING (-17... #> 6   13.642806 MULTICURVE (LINESTRING (34.... #> 7   68.013014 MULTICURVE (LINESTRING (19.... #> 8  141.545470 MULTICURVE (LINESTRING (-13... #> 9   70.017156 MULTICURVE (LINESTRING (169... #> 10   5.116398 MULTICURVE (LINESTRING (55.... # }"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_wfs_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get WFS available layer information — emodnet_get_layer_info","title":"Get WFS available layer information — emodnet_get_layer_info","text":"Get WFS available layer information","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_wfs_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get WFS available layer information — emodnet_get_layer_info","text":"","code":"emodnet_get_layer_info(wfs, layers)  emodnet_get_wfs_info(wfs = NULL, service = NULL, service_version = \"2.0.0\")  emodnet_get_all_wfs_info()"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_wfs_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get WFS available layer information — emodnet_get_layer_info","text":"wfs WFSClient R6 object methods interfacing OGC Web Feature Service. layers character vector layer names. get info layers, including layer_name use emodnet_get_wfs_info(). service EMODnet OGC WFS service name. available services, see emodnet_wfs. service_version WFS service version. Defaults \"2.0.0\".","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_wfs_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get WFS available layer information — emodnet_get_layer_info","text":"tibble containg metadata layer available service.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_wfs_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get WFS available layer information — emodnet_get_layer_info","text":"minimize number requests sent webservices, functions use memoise cache results inside active R session. clear cache, re-start R run memoise::forget(emodnet_get_wfs_info)/memoise::forget(emodnet_get_layer_info).","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_wfs_info.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get WFS available layer information — emodnet_get_layer_info","text":"emodnet_get_layer_info: Get metadata specific layers. Requires wfs object input. emodnet_get_wfs_info: Get info layers EMODnet WFS service. emodnet_get_all_wfs_info: Get metadata layers available services server.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_get_wfs_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get WFS available layer information — emodnet_get_layer_info","text":"","code":"emodnet_get_wfs_info(service = \"bathymetry\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-bathymetry.eu/wfs' #> ℹ Version: '2.0.0' #> # A tibble: 3 × 9 #>   data_source service_name service_url layer_namespace layer_name title abstract #>   <chr>       <chr>        <chr>       <chr>           <chr>      <chr> <chr>    #> 1 emodnet_wfs bathymetry   https://ow… emodnet         contours   Dept… \"Genera… #> 2 emodnet_wfs bathymetry   https://ow… emodnet         quality_i… Qual… \"Repres… #> 3 emodnet_wfs bathymetry   https://ow… emodnet         source_re… Sour… \"Covera… #> # … with 2 more variables: class <chr>, format <chr> # Query a wfs object wfs_cml <- emodnet_init_wfs_client(\"chemistry_marine_litter\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://www.ifremer.fr/services/wfs/emodnet_chemistry2' #> ℹ Version: '2.0.0' emodnet_get_wfs_info(wfs_cml) #> # A tibble: 24 × 9 #>    data_source service_name         service_url layer_namespace layer_name title #>    <chr>       <chr>                <chr>       <chr>           <chr>      <chr> #>  1 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_beache… Beac… #>  2 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_tempor… Numb… #>  3 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_totala… Beac… #>  4 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_tot_ab… Beac… #>  5 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_materi… Beac… #>  6 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_cigare… Beac… #>  7 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_cigare… Beac… #>  8 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_fishin… Beac… #>  9 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_plasti… Beac… #> 10 emodnet_wfs chemistry_marine_li… https://ww… ms              bl_single… Beac… #> # … with 14 more rows, and 3 more variables: abstract <chr>, class <chr>, #> #   format <chr> # Get info for specific layers from wfs object layers <- c(\"bl_fishing_monitoring\",            \"bl_beacheslocations_monitoring\") emodnet_get_layer_info(wfs = wfs_cml, layers = layers) #> # A tibble: 2 × 9 #>   data_source service_name service_url layer_namespace layer_name title abstract #>   <chr>       <chr>        <chr>       <chr>           <chr>      <chr> <chr>    #> 1 emodnet_wfs https://www… chemistry_… ms              bl_beache… Beac… \"\"       #> 2 emodnet_wfs https://www… chemistry_… ms              bl_fishin… Beac… \"\"       #> # … with 2 more variables: class <chr>, format <chr>"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_init_wfs_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise an EMODnet Seabed Habitats WFS client — emodnet_init_wfs_client","title":"Initialise an EMODnet Seabed Habitats WFS client — emodnet_init_wfs_client","text":"Initialise EMODnet Seabed Habitats WFS client","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_init_wfs_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise an EMODnet Seabed Habitats WFS client — emodnet_init_wfs_client","text":"","code":"emodnet_init_wfs_client(service, service_version = \"2.0.0\")"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_init_wfs_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise an EMODnet Seabed Habitats WFS client — emodnet_init_wfs_client","text":"service EMODnet OGC WFS service name. available services, see emodnet_wfs. service_version WFS service version. Defaults \"2.0.0\".","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_init_wfs_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialise an EMODnet Seabed Habitats WFS client — emodnet_init_wfs_client","text":"WFSClient R6 object methods interfacing OGC Web Feature Service.","code":""},{"path":[]},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_init_wfs_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialise an EMODnet Seabed Habitats WFS client — emodnet_init_wfs_client","text":"","code":"wfs <- emodnet_init_wfs_client(        service = \"seabed_habitats_individual_habitat_map_and_model_datasets\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-seabedhabitats.eu/geoserver/emodnet_open_maplibrary/wfs' #> ℹ Version: '2.0.0'"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_wfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Available EMODnet Web Feature Services — emodnet_wfs","title":"Available EMODnet Web Feature Services — emodnet_wfs","text":"Available EMODnet Web Feature Services","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_wfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available EMODnet Web Feature Services — emodnet_wfs","text":"","code":"emodnet_wfs()"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/emodnet_wfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available EMODnet Web Feature Services — emodnet_wfs","text":"Tibble available EMODnet Web Feature Services","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get layer attribute description — layer_attribute_descriptions","title":"Get layer attribute description — layer_attribute_descriptions","text":"Get layer attribute description","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get layer attribute description — layer_attribute_descriptions","text":"","code":"layer_attribute_descriptions(   wfs = NULL,   service = NULL,   service_version = \"2.0.0\",   layer )"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get layer attribute description — layer_attribute_descriptions","text":"wfs WFSClient R6 object methods interfacing OGC Web Feature Service. service EMODnet OGC WFS service name. available services, see emodnet_wfs. service_version WFS service version. Defaults \"2.0.0\". layer character sting layer name. get info layers, including layer_name use emodnet_get_wfs_info().","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get layer attribute description — layer_attribute_descriptions","text":"data.frame containing layer attribute descriptions (metadata).","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_descriptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get layer attribute description — layer_attribute_descriptions","text":"","code":"layer_attribute_descriptions(service = \"human_activities\", layer = \"maritimebnds\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-humanactivities.eu/wfs' #> ℹ Version: '2.0.0' #>          name      type minOccurs maxOccurs nillable #> 1    objectid   numeric         0         1     TRUE #> 2  mblszotpid   integer         0         1     TRUE #> 3     localid   numeric         0         1     TRUE #> 4    sitename character         0         1     TRUE #> 5  legalfound      Date         0         1     TRUE #> 6  legalfou_1 character         0         1     TRUE #> 7     country character         0         1     TRUE #> 8  nationalle character         0         1     TRUE #> 9    nutscode character         0         1     TRUE #> 10 mblsds_mbl character         0         1     TRUE #> 11 shape_leng    double         0         1     TRUE #> 12   the_geom  geometry         0         1     TRUE"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_inspect.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect layer attribute — layer_attribute_inspect","title":"Inspect layer attribute — layer_attribute_inspect","text":"Inspect layer attribute","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_inspect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect layer attribute — layer_attribute_inspect","text":"","code":"layer_attribute_inspect(   wfs = NULL,   service = NULL,   service_version = \"2.0.0\",   layer,   attribute )"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_inspect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect layer attribute — layer_attribute_inspect","text":"wfs WFSClient R6 object methods interfacing OGC Web Feature Service. service EMODnet OGC WFS service name. available services, see emodnet_wfs. service_version WFS service version. Defaults \"2.0.0\". layer character sting layer name. get info layers, including layer_name use emodnet_get_wfs_info(). attribute character string, name layer attribute (variable). Use layer_attributes_get_names() get layer attribute names.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_inspect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect layer attribute — layer_attribute_inspect","text":"Detailed summary individual attribute (variable). Particularly useful inspecting factor character variable levels unique values.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attribute_inspect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect layer attribute — layer_attribute_inspect","text":"","code":"wfs <- emodnet_init_wfs_client(service = \"human_activities\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-humanactivities.eu/wfs' #> ℹ Version: '2.0.0' layer_attributes_get_names(wfs, layer = \"maritimebnds\") #>  [1] \"objectid\"   \"mblszotpid\" \"localid\"    \"sitename\"   \"legalfound\" #>  [6] \"legalfou_1\" \"country\"    \"nationalle\" \"nutscode\"   \"mblsds_mbl\" #> [11] \"shape_leng\" \"the_geom\"   layer_attribute_inspect(wfs, layer = \"maritimebnds\", attribute = \"sitename\") #>                                                         .   n    percent #>                                                  Baseline 486 0.46374046 #>                                   Contiguous zone (24 nm)  65 0.06202290 #>                                         Continental Shelf  78 0.07442748 #>                          Delimitation line between states 212 0.20229008 #>                      Exclusive Economic Zone (200 nm) EEZ  68 0.06488550 #>        Exclusive Economic Zone (200 nm) EEZ - Median Line  23 0.02194656 #>  Exclusive Economic Zone (200 nm) EEZ - Overlapping claim  14 0.01335878 #>                                           Internal waters  38 0.03625954 #>                                     Territory sea (12 nm)  64 0.06106870"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_get_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of layer attributes — layer_attributes_get_names","title":"Get names of layer attributes — layer_attributes_get_names","text":"Get names layer attributes","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_get_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of layer attributes — layer_attributes_get_names","text":"","code":"layer_attributes_get_names(   wfs = NULL,   service = NULL,   service_version = \"2.0.0\",   layer )"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_get_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of layer attributes — layer_attributes_get_names","text":"wfs WFSClient R6 object methods interfacing OGC Web Feature Service. service EMODnet OGC WFS service name. available services, see emodnet_wfs. service_version WFS service version. Defaults \"2.0.0\". layer character sting layer name. get info layers, including layer_name use emodnet_get_wfs_info().","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_get_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get names of layer attributes — layer_attributes_get_names","text":"character vector layer attribute (variable) names.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_get_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get names of layer attributes — layer_attributes_get_names","text":"","code":"layer_attributes_get_names(service = \"human_activities\", layer = \"maritimebnds\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-humanactivities.eu/wfs' #> ℹ Version: '2.0.0' #>  [1] \"objectid\"   \"mblszotpid\" \"localid\"    \"sitename\"   \"legalfound\" #>  [6] \"legalfou_1\" \"country\"    \"nationalle\" \"nutscode\"   \"mblsds_mbl\" #> [11] \"shape_leng\" \"the_geom\""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summaries of layer attributes (variables) — layer_attributes_summarise","title":"Get summaries of layer attributes (variables) — layer_attributes_summarise","text":"Get summaries layer attributes (variables)","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summaries of layer attributes (variables) — layer_attributes_summarise","text":"","code":"layer_attributes_summarise(   wfs = NULL,   service = NULL,   service_version = \"2.0.0\",   layer )"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summaries of layer attributes (variables) — layer_attributes_summarise","text":"wfs WFSClient R6 object methods interfacing OGC Web Feature Service. service EMODnet OGC WFS service name. available services, see emodnet_wfs. service_version WFS service version. Defaults \"2.0.0\". layer character sting layer name. get info layers, including layer_name use emodnet_get_wfs_info().","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get summaries of layer attributes (variables) — layer_attributes_summarise","text":"output summary() attributes (variables) given layer given service.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_summarise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get summaries of layer attributes (variables) — layer_attributes_summarise","text":"","code":"layer_attributes_summarise(service = \"human_activities\", layer = \"maritimebnds\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-humanactivities.eu/wfs' #> ℹ Version: '2.0.0' #>     gml_id             objectid        mblszotpid      localid        #>  Length:1048        Min.   :   1.0   Min.   :0.00   Min.   :    0.0   #>  Class :character   1st Qu.: 262.8   1st Qu.:0.00   1st Qu.:  346.8   #>  Mode  :character   Median : 524.5   Median :1.00   Median : 1745.5   #>                     Mean   : 524.5   Mean   :1.73   Mean   : 9188.8   #>                     3rd Qu.: 786.2   3rd Qu.:3.00   3rd Qu.: 3751.2   #>                     Max.   :1048.0   Max.   :7.00   Max.   :62595.0   #>                                                                       #>    sitename           legalfound          legalfou_1          country          #>  Length:1048        Min.   :1932-01-30   Length:1048        Length:1048        #>  Class :character   1st Qu.:1984-11-09   Class :character   Class :character   #>  Mode  :character   Median :2004-12-06   Mode  :character   Mode  :character   #>                     Mean   :1999-11-21                                         #>                     3rd Qu.:2012-12-26                                         #>                     Max.   :2019-09-29                                         #>                     NA's   :221                                                #>   nationalle          nutscode          mblsds_mbl          shape_leng        #>  Length:1048        Length:1048        Length:1048        Min.   :   0.0000   #>  Class :character   Class :character   Class :character   1st Qu.:   0.0829   #>  Mode  :character   Mode  :character   Mode  :character   Median :   0.5562   #>                                                           Mean   :  13.3026   #>                                                           3rd Qu.:   4.1102   #>                                                           Max.   :1804.3286   #>"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get layer attribute values tibble — layer_attributes_tbl","title":"Get layer attribute values tibble — layer_attributes_tbl","text":"Get layer attribute values tibble","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get layer attribute values tibble — layer_attributes_tbl","text":"","code":"layer_attributes_tbl(   wfs = NULL,   service = NULL,   service_version = \"2.0.0\",   layer )"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get layer attribute values tibble — layer_attributes_tbl","text":"wfs WFSClient R6 object methods interfacing OGC Web Feature Service. service EMODnet OGC WFS service name. available services, see emodnet_wfs. service_version WFS service version. Defaults \"2.0.0\". layer character sting layer name. get info layers, including layer_name use emodnet_get_wfs_info().","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get layer attribute values tibble — layer_attributes_tbl","text":"tibble layer attribute (variable) values geometry column removed.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get layer attribute values tibble — layer_attributes_tbl","text":"Request excluding spatial information can significantly faster. Can useful inspecting attribute values constructing feature filters targeted faster layer download.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/layer_attributes_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get layer attribute values tibble — layer_attributes_tbl","text":"","code":"layer_attributes_tbl(service = \"human_activities\", layer = \"maritimebnds\") #> ✔ WFS client created succesfully #> ℹ Service: 'https://ows.emodnet-humanactivities.eu/wfs' #> ℹ Version: '2.0.0' #> # A tibble: 1,048 × 12 #>    gml_id     objectid mblszotpid localid sitename legalfound legalfou_1 country #>    <chr>         <dbl>      <int>   <dbl> <chr>    <date>     <chr>      <chr>   #>  1 maritimeb…        1          7   49469 Interna… NA         NA         Germany #>  2 maritimeb…        2          7   49471 Interna… NA         NA         Bulgar… #>  3 maritimeb…        3          7   49472 Interna… NA         NA         Croatia #>  4 maritimeb…        4          7   49473 Interna… NA         NA         Denmark #>  5 maritimeb…        5          7   49474 Interna… NA         NA         Estonia #>  6 maritimeb…        6          7   49475 Interna… NA         NA         Finland #>  7 maritimeb…        7          7   49476 Interna… NA         NA         France  #>  8 maritimeb…        8          7   49478 Interna… NA         NA         Ireland #>  9 maritimeb…        9          7   49479 Interna… NA         NA         Italy   #> 10 maritimeb…       10          7   49480 Interna… NA         NA         Latvia  #> # … with 1,038 more rows, and 4 more variables: nationalle <chr>, #> #   nutscode <chr>, mblsds_mbl <chr>, shape_leng <dbl>"},{"path":"https://emodnet.github.io/EMODnetWFS/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://emodnet.github.io/EMODnetWFS/news/index.html","id":"emodnetwfs-development-version","dir":"Changelog","previous_headings":"","what":"EMODnetWFS (development version)","title":"EMODnetWFS (development version)","text":"Added memoising (caching R session) functions getting services layers information (#52).","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/news/index.html","id":"emodnetwfs-201","dir":"Changelog","previous_headings":"","what":"EMODnetWFS 2.0.1","title":"EMODnetWFS 2.0.1","text":"Introduced better handling server response errors.","code":""},{"path":"https://emodnet.github.io/EMODnetWFS/news/index.html","id":"emodnetwfs-200","dir":"Changelog","previous_headings":"","what":"EMODnetWFS 2.0.0","title":"EMODnetWFS 2.0.0","text":"NEW FEATURE: Added ecql filtering capability ability interrogate feature attribute (see relevant vignette). Bug fix: corrected service namespace definition using wfs object Breaking Change: set extract default CRS service information (getDeafultCRS method) Breaking change: Removed default service value. Updated new EMODnet Seabed Habitats endpoints Added NEWS.md file track changes package.","code":""}]
